version: "3.7"

services:
  certbot:
    image: peelvalley/certbot
    restart: unless-stopped
    networks:
      - certbot
    environment:
      NOTIFY_EMAIL: 'info@example.com'
    volumes:
      - cert-data:/etc/letsencrypt
      - ./config/domains:/opt/certbot/domains/
  reverse-proxy:
    image: peelvalley/proxy
    restart: unless-stopped
    networks:
      - certbot
      - ipfs
    ports:
        - "0.0.0.0.0:80:80/tcp"
        - "0.0.0.0.0:443:443/tcp"
    volumes:
      - ./config/reverse-proxy/conf.d.available:/etc/nginx/conf.d.available
      - ./config/domains:/etc/nginx/conf.d.enabled
      - proxy-conf:/etc/nginx/conf.d
      - cert-data:/etc/letsencrypt
  ipfs:
    image: ipfs/go-ipfs
    restart: unless-stopped
    command: ["daemon", "--migrate=true", "--enable-gc", "--enable-namesys-pubsub"]
    init: TRUE
    volumes:
      - ipfs-data:/data/ipfs
    ports:
      - 0.0.0.0:4001:4001/tcp
      - 0.0.0.0:8080:8080/tcp
    networks:
      - ipfs
  orbitdb-api:
    image:  phillmac/orbit-db-http-api-dev:debug
    restart: unless-stopped
    command: ["node", "src/cli.js", "api"]
    #command: ["node", "--trace-warnings", "src/cli.js", "api", "--debug"]
    init: TRUE
    environment:
      IPFS_HOST: 'ipfs'
      ORBITDB_DIR: '/orbitdb'
      FORCE_HTTP1: 'true'
      #DEBUG_QUERY: 'true'
      #LOG: DEBUG
      #ANNOUNCE_DBS: 'true'
    depends_on:
      - ipfs
    networks:
      - ipfs
    volumes:
      - orbitdb-data:/orbitdb
 
volumes:
  ipfs-data:
  orbitdb-data:
  cert-data:
  proxy-conf:
    driver_opts:
      type: tmpfs
      device: tmpfs
 

networks:
  certbot:
  ipfs:
